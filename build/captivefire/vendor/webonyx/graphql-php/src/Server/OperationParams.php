<?php  declare(strict_types=1);namespace GraphQL\Server;use function array_change_key_case;use function is_string;use function json_decode;use function json_last_error;use const CASE_LOWER;class OperationParams{public $queryId;public $query;public $operation;public $variables;public $extensions;private $originalInput;private $readOnly;public static function create(array $params,bool $readonly=false):OperationParams{$instance=new static();$params=array_change_key_case($params,CASE_LOWER);$instance->originalInput=$params;$params +=['query' =>null,'queryid' =>null,'documentid' =>null,'id' =>null,'operationname' =>null,'variables' =>null,'extensions' =>null,];if($params['variables']===''){$params['variables']=null;}foreach(['extensions','variables']as $param){if(!is_string($params[$param])){continue;}$tmp=json_decode($params[$param],true);if(json_last_error()){continue;}$params[$param]=$tmp;}$instance->query=$params['query'];$instance->queryId=$params['queryid']?:$params['documentid']?:$params['id'];$instance->operation=$params['operationname'];$instance->variables=$params['variables'];$instance->extensions=$params['extensions'];$instance->readOnly=$readonly;if(isset($instance->extensions['persistedQuery']['sha256Hash'])&&empty($instance->query)&&empty($instance->queryId)){$instance->queryId=$instance->extensions['persistedQuery']['sha256Hash'];}return $instance;}public function getOriginalInput($key){return $this->originalInput[$key]??null;}public function isReadOnly(){return $this->readOnly;}}