<?php  declare(strict_types=1);namespace GraphQL\Type\Definition;use GraphQL\Language\AST\FieldNode;use GraphQL\Language\AST\FragmentDefinitionNode;use GraphQL\Language\AST\FragmentSpreadNode;use GraphQL\Language\AST\InlineFragmentNode;use GraphQL\Language\AST\OperationDefinitionNode;use GraphQL\Language\AST\SelectionSetNode;use GraphQL\Type\Schema;use function array_merge_recursive;class ResolveInfo{public $fieldName;public $fieldNodes=[];public $returnType;public $parentType;public $path;public $schema;public $fragments=[];public $rootValue;public $operation;public $variableValues=[];private $queryPlan;public function __construct(string $fieldName,iterable $fieldNodes,$returnType,ObjectType $parentType,array $path,Schema $schema,array $fragments,$rootValue,?OperationDefinitionNode $operation,array $variableValues){$this->fieldName=$fieldName;$this->fieldNodes=$fieldNodes;$this->returnType=$returnType;$this->parentType=$parentType;$this->path=$path;$this->schema=$schema;$this->fragments=$fragments;$this->rootValue=$rootValue;$this->operation=$operation;$this->variableValues=$variableValues;}public function getFieldSelection($depth=0){$fields=[];foreach($this->fieldNodes as $fieldNode){if($fieldNode->selectionSet ===null){continue;}$fields=array_merge_recursive($fields,$this->foldSelectionSet($fieldNode->selectionSet,$depth));}return $fields;}public function lookAhead():QueryPlan{if($this->queryPlan ===null){$this->queryPlan=new QueryPlan($this->parentType,$this->schema,$this->fieldNodes,$this->variableValues,$this->fragments);}return $this->queryPlan;}private function foldSelectionSet(SelectionSetNode $selectionSet,int $descend):array{$fields=[];foreach($selectionSet->selections as $selectionNode){if($selectionNode instanceof FieldNode){$fields[$selectionNode->name->value]=$descend>0&&!empty($selectionNode->selectionSet)?$this->foldSelectionSet($selectionNode->selectionSet,$descend-1):true;}elseif($selectionNode instanceof FragmentSpreadNode){$spreadName=$selectionNode->name->value;if(isset($this->fragments[$spreadName])){$fragment=$this->fragments[$spreadName];$fields=array_merge_recursive($this->foldSelectionSet($fragment->selectionSet,$descend),$fields);}}elseif($selectionNode instanceof InlineFragmentNode){$fields=array_merge_recursive($this->foldSelectionSet($selectionNode->selectionSet,$descend),$fields);}}return $fields;}}