<?php  declare(strict_types=1);namespace GraphQL\Type\Definition;use Exception;use GraphQL\Error\Error;use GraphQL\Language\AST\FloatValueNode;use GraphQL\Language\AST\IntValueNode;use GraphQL\Language\AST\Node;use GraphQL\Utils\Utils;use function is_numeric;class FloatType extends ScalarType{public $name=Type::FLOAT;public $description='The `Float` scalar type represents signed double-precision fractional
values as specified by
[IEEE 754](http://en.wikipedia.org/wiki/IEEE_floating_point). ';public function serialize($value){return $this->coerceFloat($value);}private function coerceFloat($value){if($value ===''){throw new Error('Float cannot represent non numeric value: (empty string)');}if(!is_numeric($value)&&$value !==true &&$value !==false){throw new Error('Float cannot represent non numeric value: '.Utils::printSafe($value));}return (float) $value;}public function parseValue($value){return $this->coerceFloat($value);}public function parseLiteral($valueNode,?array $variables=null){if($valueNode instanceof FloatValueNode ||$valueNode instanceof IntValueNode){return (float) $valueNode->value;}throw new Exception();}}