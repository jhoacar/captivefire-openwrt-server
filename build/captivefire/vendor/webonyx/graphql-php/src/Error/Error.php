<?php  declare(strict_types=1);namespace GraphQL\Error;use Exception;use GraphQL\Language\AST\Node;use GraphQL\Language\Source;use GraphQL\Language\SourceLocation;use GraphQL\Utils\Utils;use JsonSerializable;use Throwable;use Traversable;use function array_filter;use function array_map;use function array_values;use function is_array;use function iterator_to_array;class Error extends Exception implements JsonSerializable,ClientAware{const CATEGORY_GRAPHQL='graphql';const CATEGORY_INTERNAL='internal';public $message;private $locations;public $path;public $nodes;private $source;private $positions;private $isClientSafe;protected $category;protected $extensions;public function __construct($message,$nodes=null,?Source $source=null,$positions=null,$path=null,$previous=null,array $extensions=[]){parent::__construct($message,0,$previous);if($nodes instanceof Traversable){$nodes=iterator_to_array($nodes);}elseif($nodes &&!is_array($nodes)){$nodes=[$nodes];}$this->nodes=$nodes;$this->source=$source;$this->positions=$positions;$this->path=$path;$this->extensions=$extensions?:($previous &&$previous instanceof self?$previous->extensions:[]);if($previous instanceof ClientAware){$this->isClientSafe=$previous->isClientSafe();$this->category=$previous->getCategory()?:self::CATEGORY_INTERNAL;}elseif($previous){$this->isClientSafe=false;$this->category=self::CATEGORY_INTERNAL;}else{$this->isClientSafe=true;$this->category=self::CATEGORY_GRAPHQL;}}public static function createLocatedError($error,$nodes=null,$path=null){if($error instanceof self){if($error->path &&$error->nodes){return $error;}$nodes=$nodes?:$error->nodes;$path=$path?:$error->path;}$source=$positions=$originalError=null;$extensions=[];if($error instanceof self){$message=$error->getMessage();$originalError=$error;$nodes=$error->nodes?:$nodes;$source=$error->source;$positions=$error->positions;$extensions=$error->extensions;}elseif($error instanceof Exception ||$error instanceof Throwable){$message=$error->getMessage();$originalError=$error;}else{$message=(string) $error;}return new static($message?:'An unknown error occurred.',$nodes,$source,$positions,$path,$originalError,$extensions);}public static function formatError(Error $error){return $error->toSerializableArray();}public function isClientSafe(){return $this->isClientSafe;}public function getCategory(){return $this->category;}public function getSource(){if($this->source ===null){if(!empty($this->nodes[0])&&!empty($this->nodes[0]->loc)){$this->source=$this->nodes[0]->loc->source;}}return $this->source;}public function getPositions(){if($this->positions ===null &&!empty($this->nodes)){$positions=array_map(static function($node){return isset($node->loc)?$node->loc->start:null;},$this->nodes);$positions=array_filter($positions,static function($p){return $p !==null;});$this->positions=array_values($positions);}return $this->positions;}public function getLocations(){if($this->locations ===null){$positions=$this->getPositions();$source=$this->getSource();$nodes=$this->nodes;if($positions &&$source){$this->locations=array_map(static function($pos)use($source){return $source->getLocation($pos);},$positions);}elseif($nodes){$locations=array_filter(array_map(static function($node){if($node->loc &&$node->loc->source){return $node->loc->source->getLocation($node->loc->start);}},$nodes));$this->locations=array_values($locations);}else{$this->locations=[];}}return $this->locations;}public function getNodes(){return $this->nodes;}public function getPath(){return $this->path;}public function getExtensions(){return $this->extensions;}public function toSerializableArray(){$arr=['message' =>$this->getMessage(),];$locations=Utils::map($this->getLocations(),static function(SourceLocation $loc){return $loc->toSerializableArray();});if(!empty($locations)){$arr['locations']=$locations;}if(!empty($this->path)){$arr['path']=$this->path;}if(!empty($this->extensions)){$arr['extensions']=$this->extensions;}return $arr;}public function jsonSerialize(){return $this->toSerializableArray();}public function __toString(){return FormattedError::printError($this);}}