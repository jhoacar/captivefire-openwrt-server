<?php  declare(strict_types=1);namespace GraphQL\Error;use function trigger_error;use const E_USER_WARNING;final class Warning{const WARNING_ASSIGN=2;const WARNING_CONFIG=4;const WARNING_FULL_SCHEMA_SCAN=8;const WARNING_CONFIG_DEPRECATION=16;const WARNING_NOT_A_TYPE=32;const ALL=63;private static $enableWarnings=self::ALL;private static $warned=[];private static $warningHandler;public static function setWarningHandler(?callable $warningHandler=null){self::$warningHandler=$warningHandler;}public static function suppress($suppress=true){if($suppress ===true){self::$enableWarnings=0;}elseif($suppress ===false){self::$enableWarnings=self::ALL;}else{self::$enableWarnings &=~$suppress;}}public static function enable($enable=true){if($enable ===true){self::$enableWarnings=self::ALL;}elseif($enable ===false){self::$enableWarnings=0;}else{self::$enableWarnings |=$enable;}}public static function warnOnce($errorMessage,$warningId,$messageLevel=null){if(self::$warningHandler){$fn=self::$warningHandler;$fn($errorMessage,$warningId);}elseif((self::$enableWarnings&$warningId)>0&&!isset(self::$warned[$warningId])){self::$warned[$warningId]=true;trigger_error($errorMessage,$messageLevel?:E_USER_WARNING);}}public static function warn($errorMessage,$warningId,$messageLevel=null){if(self::$warningHandler){$fn=self::$warningHandler;$fn($errorMessage,$warningId);}elseif((self::$enableWarnings&$warningId)>0){trigger_error($errorMessage,$messageLevel?:E_USER_WARNING);}}}