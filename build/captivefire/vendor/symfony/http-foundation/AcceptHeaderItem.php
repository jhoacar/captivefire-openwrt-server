<?php  namespace Symfony\Component\HttpFoundation;class AcceptHeaderItem{private $value;private $quality=1.0;private $index=0;private $attributes=[];public function __construct(string $value,array $attributes=[]){$this->value=$value;foreach($attributes as $name =>$value){$this->setAttribute($name,$value);}}public static function fromString(?string $itemValue){$parts=HeaderUtils::split($itemValue ??'',';=');$part=array_shift($parts);$attributes=HeaderUtils::combine($parts);return new self($part[0],$attributes);}public function __toString(){$string=$this->value.($this->quality<1?';q='.$this->quality:'');if(\count($this->attributes)>0){$string .='; '.HeaderUtils::toString($this->attributes,';');}return $string;}public function setValue(string $value){$this->value=$value;return $this;}public function getValue(){return $this->value;}public function setQuality(float $quality){$this->quality=$quality;return $this;}public function getQuality(){return $this->quality;}public function setIndex(int $index){$this->index=$index;return $this;}public function getIndex(){return $this->index;}public function hasAttribute(string $name){return isset($this->attributes[$name]);}public function getAttribute(string $name,$default=null){return $this->attributes[$name]??$default;}public function getAttributes(){return $this->attributes;}public function setAttribute(string $name,string $value){if('q' ===$name){$this->quality=(float) $value;}else{$this->attributes[$name]=$value;}return $this;}}