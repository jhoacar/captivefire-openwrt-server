<?php  declare(strict_types=1);namespace UciGraphQL\Providers;use UciGraphQL\Mutations\Uci\UciMutation;use UciGraphQL\Queries\Uci\UciQuery;use UciGraphQL\Utils\Command;class UciCommandProvider extends UciProvider{public const NOT_FOUND='not found';public const UCI_SHOW='uci show';private static function cleanInput($input):string{return escapeshellcmd(escapeshellarg($input));}private function cleanUciValue($value){return escapeshellarg($value);}public static function get($config,$section,$option):string{$config=self::cleanInput($config);$section=self::cleanInput($section);$option=self::cleanInput($option);$result=Command::execute("uci get $config.$section.$option");return str_contains($result,self::NOT_FOUND)?'':$result;}private static function getIndexSection($section):int{$matches=[];$isFound=preg_match('(\[([0-9]*)\])',$section,$matches);if($isFound){return intval($matches[1]);}return-1;}private static function getNameSection($section):string{$matches=[];$isFound=preg_match('(@([\s\S]*)\[)',$section,$matches);if($isFound){return $matches[1];}return $section;}public static function getConfigurationCommand():array{$result=Command::execute(self::UCI_SHOW);return str_contains($result,self::NOT_FOUND)?[]:explode(PHP_EOL,$result);}public static function getUciConfiguration():array{$CONFIGURATION=0;$SECTION=1;$OPTIONS=2;$uciConfig=[];$configurations=static::getConfigurationCommand();foreach($configurations as $info){if(!strlen($info)){continue;}$division=explode('=',$info);if(count($division)<2){continue;}[$info,$content]=$division;$removedBlankSpaces=preg_replace('/\s/','',$info);$information=explode('.',$removedBlankSpaces?$removedBlankSpaces:'');if(count($information)<3){continue;}$config=$information[$CONFIGURATION];$section=$information[$SECTION];$option=explode('=',$information[$OPTIONS])[0];$content=explode(' ',$content);if(empty($uciConfig[$config])){$uciConfig[$config]=[];}$sectionName=self::getNameSection($section);if(empty($uciConfig[$config][$sectionName])){$uciConfig[$config][$sectionName]=[];}self::getUciSection($uciConfig[$config][$sectionName],$section,$option,$content);}return $uciConfig;}protected static function getUciSection(&$configSection,$sectionName,$optionName,$content):void{$isArraySection=str_contains($sectionName,'@');$indexArraySection=$isArraySection?self::getIndexSection($sectionName):-1;if($isArraySection){if(empty($configSection)){$configSection=[];}if(is_array($configSection)){if(empty($configSection[$indexArraySection])){$configSection[$indexArraySection]=[];}$configSection[$indexArraySection][$optionName]=$content;}}else{if(empty($configSection)){$configSection=new UciSection();}if($configSection instanceof UciSection){if(empty($configSection->options)){$configSection->options=[];}$configSection->options[$optionName]=$content;}}}public function dispatchAction($action,$config,$section,$indexSection,$option,$value):array{$configCleaned=self::cleanInput($config);$sectionCleaned=self::cleanInput($section);$optionCleaned=self::cleanInput($option);$valueCleaned=self::cleanUciValue($value);$verb=strtolower($action);$commandToExecute='';if($indexSection ===parent::IS_OBJECT_SECTION){$commandToExecute="uci $verb $configCleaned.$sectionCleaned.$optionCleaned=$valueCleaned;";}elseif($indexSection ===parent::ALL_INDEXES_SECTION){$allIndexes=count(UciMutation::uci()->uciInfo[$configCleaned][$sectionCleaned]);foreach(range(0,$allIndexes-1)as $index){$commandToExecute .="uci $verb $configCleaned.@$sectionCleaned[$index].$optionCleaned=$valueCleaned;";}}else{$commandToExecute="uci $verb $configCleaned.@$sectionCleaned[$indexSection].$optionCleaned=$valueCleaned;";}$resultCode=0;$resultCommand=Command::execute($commandToExecute,$resultCode);if($resultCode !==Command::NO_ERRORS){return[$resultCommand];}$resultCommand=Command::execute("uci commit $configCleaned",$resultCode);if($resultCode !==Command::NO_ERRORS){return[$resultCommand];}array_push($this->services,$configCleaned);UciQuery::uci()->setUciInfo(self::getUciConfiguration());UciMutation::uci()->setUciInfo(self::getUciConfiguration());$result=[];$section=UciQuery::uci()->uciInfo[$config][$section];if($indexSection ===parent::IS_OBJECT_SECTION &&$section instanceof UciSection){$result=$section->options[$option];}elseif(is_array($section)&&$indexSection >=0){$result=$section[$indexSection][$option];}return $result;}}