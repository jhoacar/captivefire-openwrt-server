<?php  declare(strict_types=1);namespace UciGraphQL\Queries;use GraphQL\Type\Definition\ObjectType;use GraphQL\Type\Definition\ResolveInfo;use UciGraphQL\Loader;use UciGraphQL\Queries\Uci\UciQuery;use UciGraphQL\Utils\ArrayMerge;class QueryType extends ObjectType{use Loader;private static $query=null;public static function query($customFields=[]):self{return self::$query ===null?(self::$query=new self($customFields)):self::$query;}public static function clean():void{UciQuery::clean();self::$query=null;}private function __construct($customFields=[]){self::$namespace=__NAMESPACE__;$this->searchFields();$config=['name' =>'Query','fields' =>ArrayMerge::merge_arrays(UciQuery::getFields(),$customFields),'resolveField' =>function($value,$args,$context,ResolveInfo $info){$method='resolve'.ucfirst($info->fieldName);if(method_exists($this,$method)){return $this->{$method}($value,$args,$context,$info);}else{return '';}},];parent::__construct($config);}}