<?php  namespace App\Responses\Update;use App\Responses\Forbidden;use App\Responses\Response as BaseResponse;use App\Utils\Curl;use App\Validations\CurlValidation;use Symfony\Component\HttpFoundation\Request;class Response extends BaseResponse{private function isUpdateRequest($request):bool{return $request->getMethod()===Request::METHOD_POST &&$request->getPathInfo()==='/update';}public function matchRequest($request):bool{return $this->isUpdateRequest($this->request=$request);}public function handleRequest(){if($this->validation ===null){$this->validation=new CurlValidation();}if(!$this->isValidatedRequest()){return(new Forbidden())->handleRequest();}return $this->handleUpdate();}private function handleUpdate(){$host=(string) getenv('CAPTIVEFIRE_ACCESS');$host=str_ends_with($host,'/')?substr_replace($host,'',-1):$host;$urlToUpdate=$host.'/openwrt/update';if($this->validation ===null){return $this;}$token=$this->validation->getToken($this->request);$response=Curl::makeCurl($urlToUpdate,CURLOPT_POST,$token);$pharPath=(string) getenv('PATH_PHAR');file_put_contents($pharPath,$response->data);return $this->setStatusCode(200)->setContent((string) json_encode(['updated'=>'ok']))->send();}}