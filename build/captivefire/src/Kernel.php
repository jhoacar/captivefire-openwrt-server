<?php  namespace App;use App\Responses\NotFound;use App\Responses\Response;use App\Responses\ServerError;use Symfony\Component\HttpFoundation\Request;use UciGraphQL\Utils\ClassFinder;class Kernel{const PATH_SERVICES='PATH_SERVICES';const PATH_PHAR='PATH_PHAR';const CAPTIVEFIRE_ACCESS='CAPTIVEFIRE_ACCESS';const APP_GRAPHQL_ROUTE='APP_GRAPHQL_ROUTE';public function __construct(){putenv(self::PATH_SERVICES.'=/app/services');putenv(self::PATH_PHAR.'=/app/build/index.phar');putenv(self::CAPTIVEFIRE_ACCESS.'=http://host.docker.internal:4000');putenv(self::APP_GRAPHQL_ROUTE.'=/graphql');}public function handle(){try{return $this->handleRequest();}catch(\Throwable $throwable){$error=['message' =>$throwable->getMessage(),'code' =>$throwable->getCode(),'file' =>$throwable->getFile(),'line' =>$throwable->getLine(),'trace' =>$throwable->getTraceAsString(),];return(new ServerError())->handleRequest((string) json_encode($error));}}private function isCorrectClass($class):bool{$parents=class_parents($class);if(!$parents){$parents=[];}return in_array(Response::class,$parents,true);}private function isMatchedRequest($handler,$request):bool{return method_exists($handler,'matchRequest')&&$handler->matchRequest($request);}private function getResponseHandled($handler){if(!method_exists($handler,'handleRequest')){return null;}return $handler->handleRequest();}private function handleRequest(){$request=Request::createFromGlobals();$classes=ClassFinder::getClassesInNamespace(__DIR__.'/../','App\\Responses');foreach($classes as $class){if($this->isCorrectClass($class)){$handler=new $class();if($this->isMatchedRequest($handler,$request)){return $this->getResponseHandled($handler);}}}return(new NotFound())->handleRequest();}}